// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  // Если вы написали два слова в один, то с помощью map сделайте между ними "_"

  email String @unique
  password String

  name String @unique
  avatarPath String @default("/uploads/default-avatar.png") @map("avatar_path")
 
  

  phone String @default("")
}

// Product Order OrderItems Category Review

model Product {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  name String @unique
  slug String @unique
  description String 
  price Int 
  images String[]

}

model Category {
   id Int @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  name String @unique
}

model Review {
   id Int @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  rating Int
  text String 
}

model Order {
   id Int @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  status EnumOrderStatus  @default(PENDING)
  items OrderItem[]
}

model OrderItem {
   id Int @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  quantity Int 
  price Int

}

enum EnumOrderStatus {
  PENDING 
  PAYED
  SHIPPED
  DELIVERED
}

